import { useState, useEffect } from 'react'
import { useRouter } from 'next/router'
import { type NextPage } from "next";
import Head from "next/head";
import Penta from "../components/Penta";
import Block from "../components/Block";
import { useKeyBindings} from "rooks";
import { trpc } from "../../utils/trpc";

function keyA() {
  console.log("A")
}


const PentaPage: NextPage = () => {
  const { query, isReady: routerReady } = useRouter()
  const { data: penta, refetch: penta_refetch } = trpc.penta.get.useQuery({
    id: String(query.id)
  }, {
    enabled: routerReady
  },);

  const [activeBlock, setActiveBlock] = useState<number>()

  useKeyBindings({ a: keyA, Tab: keyTab })


  function keyTab(event: KeyboardEvent) {
    console.log("Tab")
    event.preventDefault();
    if (!penta?.blocks) { }
    else if (!activeBlock && activeBlock !== 0) {
      console.log(penta?.blocks[0]?.id)
      setActiveBlock(0)
    }
    else if (activeBlock == penta?.blocks.length - 1) {
      setActiveBlock(0)
      }
    else (setActiveBlock(activeBlock + 1))
  }

  //console.log(activeBlock)

  let columnClass = null
  if      (penta?.blocks.length === 3)  { columnClass = 'grid-cols-3'  }
  else if (penta?.blocks.length === 4)  { columnClass = 'grid-cols-4'  }
  else if (penta?.blocks.length === 5)  { columnClass = 'grid-cols-5'  }
  else if (penta?.blocks.length === 6)  { columnClass = 'grid-cols-6'  }
  else if (penta?.blocks.length === 7)  { columnClass = 'grid-cols-6'  }
  else if (penta?.blocks.length === 8)  { columnClass = 'grid-cols-6'  }
  else if (penta?.blocks.length === 9)  { columnClass = 'grid-cols-6'  }
  else if (penta?.blocks.length === 10) { columnClass = 'grid-cols-6'  }
  else if (penta?.blocks.length === 11) { columnClass = 'grid-cols-6'  }
  else if (penta?.blocks.length === 12) { columnClass = 'grid-cols-6'  }

  const classes = ["mt-10", "grid", "items-center", "justify-center", columnClass]

  return (
    <>
      <Head>
        <title>Katamino</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <div>
        </div>
        <div>
          <Penta penta={penta} borderWidth={2}></Penta>
        </div>
        <div className={classes.join(" ")}>
          {penta?.blocks.map((block, index) => {
            let classes = []
            // this is cute but just figure out a border
            if (index === activeBlock) {
              classes = ["drop-shadow-lg"]
            }
            else {
              classes = ["blur-[1.5px]"]
            }
            return (
              <div key={block.id} className={classes.join(" ")}>
                <Block block={block}></Block>
              </div>
            )
          })}
        </div>
      </main>
    </>
  )
}

export default PentaPage