import { useRouter } from 'next/router'
import { type NextPage } from "next";
import Head from "next/head";
import Penta from "../components/Penta";
import Block from "../components/Block";

import { trpc } from "../../utils/trpc";

const PentaPage: NextPage = () => {
  const { query, isReady: routerReady } = useRouter()
  const { data: penta, refetch: penta_refetch } = trpc.penta.get.useQuery({
    id: String(query.id)
  }, {
    enabled: routerReady
  },);

  let columnClass = null
  if      (penta?.blocks.length === 3)  { columnClass = 'grid-cols-3'  }
  else if (penta?.blocks.length === 4)  { columnClass = 'grid-cols-4'  }
  else if (penta?.blocks.length === 5)  { columnClass = 'grid-cols-5'  }
  else if (penta?.blocks.length === 6)  { columnClass = 'grid-cols-6'  }
  else if (penta?.blocks.length === 7)  { columnClass = 'grid-cols-6'  }
  else if (penta?.blocks.length === 8)  { columnClass = 'grid-cols-6'  }
  else if (penta?.blocks.length === 9)  { columnClass = 'grid-cols-6'  }
  else if (penta?.blocks.length === 10) { columnClass = 'grid-cols-6'  }
  else if (penta?.blocks.length === 11) { columnClass = 'grid-cols-6'  }
  else if (penta?.blocks.length === 12) { columnClass = 'grid-cols-6'  }

  const classes = ["mt-10", "grid", "items-center", "justify-center", columnClass]

  return (
    <>
      <Head>
        <title>Katamino</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <div>
          <Penta id={penta?.id}></Penta>
        </div>
        <div className={classes.join(" ")}>
          {penta?.blocks.map((block) => {
            return (
              <Block key={block.id} block={block}></Block>
            )
          })}
        </div>
      </main>
    </>
  )
}

export default PentaPage